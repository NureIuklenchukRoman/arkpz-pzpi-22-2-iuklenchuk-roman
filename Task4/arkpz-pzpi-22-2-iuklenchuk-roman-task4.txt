Міністерство освіти і науки України
Харківський національний університет радіоелектроніки

Кафедра програмної інженерії

Звіт
З лабораторної роботи №4
З дисципліни «Аналіз та рефакторинг коду»
на тему: «РОЗРОБКА IoT КЛІЄНТА»

Виконавець:		
ст. гр. ПЗПІ-22-2						                    Юкленчук Р. О. 

Перевірив:		
ст. викладач кафедри ПІ				                    Сокорчук І. П. 
	


                                                                                                       










Харків 2024
1 МЕТА РОБОТИ

     Розробити клієнт IoT, який здійснює збір, аналіз і передачу даних на сервер відповідно до принципів Інтернету речей. Реалізувати бізнес-логіку, функціонал налаштування пристрою та забезпечити інтеграцію з іншими компонентами системи.
     
2 ХІД РОБОТИ

     В ході виконання лабораторної роботи було впроваджено ряд інженерних рішень, які забезпечують функціональність та ефективність роботи програмного забезпечення:
     * Розроблено функцію автоматичного підключення до бездротової мережі. У разі недоступності заданої мережі система автоматично виконує повторні спроби з'єднання, що забезпечує підвищену стабільність її роботи.
     * Додано функціонал введення коду для управління замком. Користувач може вводити код через клавіатуру, а результат перевірки коду відображається на LCD-дисплеї, інформуючи про успішне або невдале відкриття замка.
     * Система оснащена датчиком вологості, який постійно моніторить рівень вологості на складі. У разі перевищення або зниження встановлених норм, датчик надсилає відповідне повідомлення на сервер який в свою чергу відсилає повідомлення користувачу, що дозволяє своєчасно реагувати на зміну умов.
     * Реалізовано механізм відправлення даних у форматі JSON через HTTP POST-запити. Це забезпечує зручність інтеграції системи з іншими сервісами та дозволяє зберігати дані для подальшого аналізу.
     Впроваджені рішення гарантують стабільну, точну та безпечну роботу системи, що дає змогу ефективно використовувати її для моніторингу навколишнього середовища та забезпечення оптимальних умов.


3 ВИСНОВКИ

     У ході виконання лабораторної роботи було успішно розроблено та впроваджено функціонал, який забезпечує ефективну роботу системи для моніторингу та управління складськими умовами.
     Реалізація автоматичного підключення до бездротової мережі гарантує безперервну роботу системи навіть за умов тимчасової відсутності з'єднання.
     Функція введення коду для управління замком та інформування користувача через LCD-дисплей спрощує доступ до складу, забезпечуючи інтуїтивний інтерфейс.
     Таким чином, впроваджені інженерні рішення забезпечили функціональність, надійність та гнучкість системи, що робить її ефективним інструментом для управління складом та підтримання оптимальних умов зберігання.
ДОДАТОК А
UML діаграма прецедентів ІоТ клієнта


Рисунок А.1 – Діаграма прецедентів ІоТ клієнта

ДОДАТОК Б
UML діаграма діяльності ІоТ клієнта


Рисунок Б.1 – UML діагма діяльності для ІоТ клієнта. Частина 1.


Рисунок Б.2 – UML діагма діяльності для ІоТ клієнта. Частина 2.

ДОДАТОК В
Фрагмент програмного коду бізнес-логіки ІоТ клієнта (математичної обробки пов’язаних із предметною областю даних)

  1 #include <Arduino.h>  // Include the necessary library
  2 
  3 float humidityReadings[10];  // Array for 10 humidity readings
  4 int humidityIndex = 0;  // Renamed the variable
  5 void notifyHumidity(String data);
  6 void check_humidity() {
  7   // Generate a random humidity from 30% to 90%
  8   float humidity = random(30, 91);  // Humidity range from 30% to 90%
  9 
 10   // Save the value in the array
 11   humidityReadings[humidityIndex] = humidity;
 12   humidityIndex = (humidityIndex + 1) % 10;  // Overwrite the array with a cyclic shift
 13 
 14   // Calculate the average humidity
 15   float averageHumidity = 0;
 16   for (int i = 0; i < 10; i++) {
 17     averageHumidity += humidityReadings[i];
 18   }
 19   averageHumidity /= 10;
 20 
 21   // Determine the minimum and maximum humidity
 22   float minHumidity = humidityReadings[0];
 23   float maxHumidity = humidityReadings[0];
 24   for (int i = 1; i < 10; i++) {
 25     if (humidityReadings[i] < minHumidity) minHumidity = humidityReadings[i];
 26     if (humidityReadings[i] > minHumidity && minHumidity == 0) minHumidity = humidityReadings[i];
 27     if (humidityReadings[i] > maxHumidity) maxHumidity = humidityReadings[i];
 28   }
 29   
 30   if (humidity < 30) {
 31    notifyHumidity("Уровень влажности слишком низкий! Уведомление пользователю.");
 32   } else if (humidity > 70) {
 33     notifyHumidity("Уровень влажности слишком высокий! Уведомление пользователю.");
 34   } 
 35 
 36   // Send data to the monitor
 37   Serial.print("Current humidity: ");
 38   Serial.println(humidity);
 39   Serial.print("Average humidity: ");
 40   Serial.println(averageHumidity);
 41   Serial.print("Minimum humidity: ");
 42   Serial.println(minHumidity);
 43   Serial.print("Maximum humidity: ");
 44   Serial.println(maxHumidity);
 45 
 46   delay(2000);  // Delay for the next measurement
 47 }

Фрагмент програмного коду налаштування ІоТ клієнта

  1 
  2 void setupWIFIConnection(){
  3   logAvailableNetworks();
  4 
  5   WiFi.begin(ssid, password);
  6   while (WiFi.status() != WL_CONNECTED) {
  7     delay(1000);
  8     Serial.println("Connecting...");
  9   }
 10   Serial.println("Connected!");
 11 
 12   // Print the ESP32's IP address
 13   Serial.print("IP address: ");
 14   Serial.println(WiFi.localIP());
 15 }
ДОДАТОК Г
Відео-посилання на Youtube

Посилання: https://youtu.be/sWlqYnT-ovQ

